name: Build and Push Docker Image

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:
    branches:
    - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Compute image tag
      id: vars
      run: |
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          TAG="${GITHUB_REF#refs/tags/}"
        else
          TAG="latest"
        fi
        echo "tag=$TAG" >> "$GITHUB_OUTPUT"

    - name: Cache Maven repo
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: m2-${{ hashFiles('backend/pom.xml') }}
        restore-keys: m2-
    - name: Cache npm
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: npm-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: npm-

    - name: Build & push backend
      uses: docker/build-push-action@v6
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: |
          ${{ env.DOCKERHUB_USERNAME }}/fleetlens-backend:${{ steps.vars.outputs.tag }}
        cache-from: type=gha,scope=backend
        cache-to: type=gha,mode=max,scope=backend

    - name: Build & push frontend
      uses: docker/build-push-action@v6
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: |
          ${{ env.DOCKERHUB_USERNAME }}/fleetlens-frontend:${{ steps.vars.outputs.tag }}
        cache-from: type=gha,scope=frontend
        cache-to: type=gha,mode=max,scope=frontend
